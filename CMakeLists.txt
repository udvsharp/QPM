# Policies
cmake_minimum_required(VERSION 3.17 FATAL_ERROR)

# Meta
# Names
set(META_QPM_PROJECT_NAME "qpm")
string(TOUPPER "qpm" META_QPM_PROJECT_NAME_PREFIX)
string(TOUPPER ${META_QPM_PROJECT_NAME} META_QPM_PROJECT_NAME_UPPER)
set(META_QPM_PROJECT_FULL_NAME "${META_QPM_PROJECT_NAME}")
set(META_QPM_PROJECT_DESCRIPTION "Qpm project manager")
set(META_QPM_AUTHOR "udv-code")
set(META_QPM_AUTHOR_DOMAIN "https://github.com/${META_QPM_AUTHOR}/${META_QPM_PROJECT_NAME}")

# Version
set(META_QPM_VERSION_MAJOR "1")
set(META_QPM_VERSION_MINOR "0")
set(META_QPM_VERSION_PATCH "0")
set(META_QPM_VERSION_TWEAK "0")
set(META_QPM_VERSION "${META_QPM_VERSION_MAJOR}.${META_QPM_VERSION_MINOR}.${META_QPM_VERSION_PATCH}.${META_QPM_VERSION_TWEAK}")
set(META_QPM_NAME_VERSION "${META_QPM_PROJECT_FULL_NAME} v${META_QPM_VERSION_MAJOR}.${META_QPM_VERSION_MINOR}.${META_QPM_VERSION_PATCH}.${META_QPM_VERSION_TWEAK}")

# Targets
set(QPM_TARGET_NAME "${META_QPM_PROJECT_NAME}")

# Projects
project(${META_QPM_PROJECT_FULL_NAME}
    VERSION ${META_QPM_VERSION}
    DESCRIPTION ${META_QPM_PROJECT_DESCRIPTION}
    HOMEPAGE_URL ${META_QPM_AUTHOR_DOMAIN}
    LANGUAGES C CXX)

# CMake setup
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")
include(build)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

# CXX Settings
set(CXX_STANDARD_DEFAULT 17)
set(CMAKE_CXX_STANDARD ${CXX_STANDARD_DEFAULT})
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# C Settings
set(C_STANDARD_DEFAULT 11)
set(CMAKE_C_STANDARD ${C_STANDARD_DEFAULT})
set(CMAKE_C_STANDARD_REQUIRED ON)
set(CMAKE_C_EXTENSIONS OFF)

# Qt
set(QT_VERSION_MAJOR 6)
set(QT_VERSION_MINOR 0)
set(QT_VERSION_HOTFIX 1)
set(QT_VERSION ${QT_VERSION_MAJOR}.${QT_VERSION_MINOR}.${QT_VERSION_HOTFIX})

set(REQUIRED_QT_LIBS Core Gui Qml Quick QuickControls2 Widgets)

set(REQUIRED_QT_LIBS_QUALIFIED)
foreach (QT_LIB IN LISTS REQUIRED_QT_LIBS)
    list(APPEND REQUIRED_QT_LIBS_QUALIFIED Qt${QT_VERSION_MAJOR}::${QT_LIB})
endforeach ()

list(APPEND REQUIRED_LIBS_QUALIFIED ${REQUIRED_QT_LIBS_QUALIFIED})
list(APPEND REQUIRED_LIBS ${REQUIRED_QT_LIBS})

find_package(Qt${QT_VERSION_MAJOR} COMPONENTS ${REQUIRED_QT_LIBS} REQUIRED)

# Target
add_subdirectory(qpm-main)

# Linkage
target_link_libraries(
    ${QPM_TARGET_NAME}
    PRIVATE
    ${REQUIRED_LIBS_QUALIFIED}
)
